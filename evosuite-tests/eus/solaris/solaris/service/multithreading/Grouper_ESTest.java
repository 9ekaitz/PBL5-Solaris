/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 21 11:14:14 GMT 2022
 */

package eus.solaris.solaris.service.multithreading;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import eus.solaris.solaris.service.multithreading.DataBuffer;
import eus.solaris.solaris.service.multithreading.GatherBuffer;
import eus.solaris.solaris.service.multithreading.Grouper;
import eus.solaris.solaris.service.multithreading.ThreadService;
import eus.solaris.solaris.service.multithreading.modes.GroupMode;
import java.time.Instant;
import java.time.LocalDate;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Grouper_ESTest extends Grouper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Double double0 = new Double(60.0);
      linkedList0.push(double0);
      Double double1 = Grouper.getKWhSumFromKWminList(linkedList0);
      assertEquals(1.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GroupMode groupMode0 = GroupMode.MONTH;
      Grouper grouper0 = new Grouper((GatherBuffer) null, (DataBuffer) null, groupMode0);
      // Undeclared exception!
      try { 
        grouper0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("eus.solaris.solaris.service.multithreading.Grouper", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        Grouper.groupByMonth((Map<Instant, Double>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("eus.solaris.solaris.service.multithreading.Grouper", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        Grouper.getKWhSumFromKWminList((List<Double>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("eus.solaris.solaris.service.multithreading.Grouper", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Integer integer0 = new Integer((-524));
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-524));
      ThreadService threadService0 = new ThreadService(integer0, localDate0, localDate0);
      GatherBuffer gatherBuffer0 = new GatherBuffer(integer0, threadService0);
      HashMap<LocalDate, Map<Instant, Double>> hashMap0 = new HashMap<LocalDate, Map<Instant, Double>>();
      DataBuffer dataBuffer0 = new DataBuffer();
      gatherBuffer0.add(hashMap0);
      GroupMode groupMode0 = GroupMode.YEAR;
      Grouper grouper0 = new Grouper(gatherBuffer0, dataBuffer0, groupMode0);
      // Undeclared exception!
      try { 
        grouper0.run();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap$HashIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HashMap<Instant, Double> hashMap0 = new HashMap<Instant, Double>();
      Instant instant0 = MockInstant.now();
      Double double0 = new Double((-12L));
      hashMap0.put(instant0, double0);
      // Undeclared exception!
      try { 
        Grouper.groupByMonth(hashMap0);
        fail("Expecting exception: NoSuchMethodError");
      
      } catch(NoSuchMethodError e) {
         //
         // 'java.time.LocalDate org.evosuite.runtime.mock.java.time.MockLocalDate.ofInstant(java.time.Instant, java.time.ZoneId)'
         //
         verifyException("eus.solaris.solaris.service.multithreading.Grouper", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      HashMap<Instant, Double> hashMap0 = new HashMap<Instant, Double>();
      Map<Instant, Double> map0 = Grouper.groupByMonth(hashMap0);
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Double double0 = new Double((-4281.2));
      linkedList0.add(double0);
      Double double1 = Grouper.getKWhSumFromKWminList(linkedList0);
      assertEquals((-71.35333333333332), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      Double double0 = Grouper.getKWhSumFromKWminList(linkedList0);
      assertEquals(0.0, (double)double0, 0.01);
  }
}
