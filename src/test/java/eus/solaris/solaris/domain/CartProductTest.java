/*
 * This file was automatically generated by EvoSuite
 * Tue Jan 25 13:51:34 GMT 2022
 */

package eus.solaris.solaris.domain;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

public class CartProductTest {

  @Test
  @Timeout(4)
  public void test00() throws Throwable {
    CartProduct cartProduct0 = new CartProduct();
    Integer integer0 = (0);
    cartProduct0.setVersion(integer0);
    Integer integer1 = cartProduct0.getVersion();
    assertEquals(0, (int) integer1);
  }

  @Test
  @Timeout(4)
  public void test01() throws Throwable {
    CartProduct cartProduct0 = new CartProduct();
    Integer integer0 = (97);
    cartProduct0.setVersion(integer0);
    Integer integer1 = cartProduct0.getVersion();
    assertEquals(97, (int) integer1);
  }

  @Test
  @Timeout(4)
  public void test02() throws Throwable {
    CartProduct cartProduct0 = new CartProduct();
    Integer integer0 = ((-337));
    cartProduct0.setVersion(integer0);
    Integer integer1 = cartProduct0.getVersion();
    assertEquals((-337), (int) integer1);
  }

  @Test
  @Timeout(4)
  public void test03() throws Throwable {
    CartProduct cartProduct0 = new CartProduct();
    Integer integer0 = (0);
    cartProduct0.setQuantity(integer0);
    Integer integer1 = cartProduct0.getQuantity();
    assertEquals(0, (int) integer1);
  }

  @Test
  @Timeout(4)
  public void test04() throws Throwable {
    CartProduct cartProduct0 = new CartProduct();
    Integer integer0 = (1);
    cartProduct0.setQuantity(integer0);
    Integer integer1 = cartProduct0.getQuantity();
    assertEquals(1, (int) integer1);
  }

  @Test
  @Timeout(4)
  public void test05() throws Throwable {
    CartProduct cartProduct0 = new CartProduct();
    Integer integer0 = Integer.valueOf((-1));
    cartProduct0.setQuantity(integer0);
    Integer integer1 = cartProduct0.getQuantity();
    assertEquals((-1), (int) integer1);
  }

  @Test
  @Timeout(4)
  public void test06() throws Throwable {
    CartProduct cartProduct0 = new CartProduct();
    Product product0 = new Product();
    cartProduct0.setProduct(product0);
    Product product1 = cartProduct0.getProduct();
    assertNull(product1.getPrice());
  }

  @Test
  @Timeout(4)
  public void test07() throws Throwable {
    CartProduct cartProduct0 = new CartProduct();
    Long long0 = Long.valueOf(0L);
    cartProduct0.id = long0;
    Long long1 = cartProduct0.getId();
    assertEquals(0L, (long) long1);
  }

  @Test
  @Timeout(4)
  public void test08() throws Throwable {
    CartProduct cartProduct0 = new CartProduct();
    Long long0 = Long.valueOf(2603L);
    cartProduct0.id = long0;
    Long long1 = cartProduct0.getId();
    assertEquals(2603L, (long) long1);
  }

  @Test
  @Timeout(4)
  public void test09() throws Throwable {
    CartProduct cartProduct0 = new CartProduct();
    Integer integer0 = cartProduct0.getVersion();
    assertNull(integer0);
  }

  @Test
  @Timeout(4)
  public void test10() throws Throwable {
    CartProduct cartProduct0 = new CartProduct();
    Long long0 = Long.valueOf((-1L));
    cartProduct0.setId(long0);
    Long long1 = cartProduct0.getId();
    assertEquals((-1L), (long) long1);
  }

  @Test
  @Timeout(4)
  public void test11() throws Throwable {
    CartProduct cartProduct0 = new CartProduct();
    Product product0 = cartProduct0.getProduct();
    assertNull(product0);
  }

  @Test
  @Timeout(4)
  public void test12() throws Throwable {
    CartProduct cartProduct0 = new CartProduct();
    Long long0 = cartProduct0.getId();
    assertNull(long0);
  }

  @Test
  @Timeout(4)
  public void test13() throws Throwable {
    CartProduct cartProduct0 = new CartProduct();
    Integer integer0 = cartProduct0.getQuantity();
    assertNull(integer0);
  }

  @Test
  @Timeout(4)
  public void test14() throws Throwable {
    CartProduct cartProduct0 = new CartProduct();
    User user0 = new User();
    cartProduct0.setUser(user0);
    User user1 = cartProduct0.getUser();
    assertNull(user1.getAvatar());
  }

  @Test
  @Timeout(4)
  public void test15() throws Throwable {
    CartProduct cartProduct0 = new CartProduct();
    User user0 = cartProduct0.getUser();
    assertNull(user0);
  }
}
