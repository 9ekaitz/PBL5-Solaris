/*
 * This file was automatically generated by EvoSuite
 * Tue Jan 25 14:02:20 GMT 2022
 */

package eus.solaris.solaris.form;

import static org.junit.jupiter.api.Assertions.*;

import java.util.LinkedList;
import java.util.List;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

class CheckoutFormTest {

  @Test
  @Timeout(4)
  void test00() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    checkoutForm0.setStreet("o$miNDT(h&sx\nl@$Gv");
    String string0 = checkoutForm0.getStreet();
    assertEquals("o$miNDT(h&sx\nl@$Gv", string0);
  }

  @Test
  @Timeout(4)
  void test01() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    checkoutForm0.setStreet("");
    String string0 = checkoutForm0.getStreet();
    assertEquals("", string0);
  }

  @Test
  @Timeout(4)
  void test02() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    checkoutForm0.setSecurityCode(",\"iGQ!uiT,52%f%");
    String string0 = checkoutForm0.getSecurityCode();
    assertEquals(",\"iGQ!uiT,52%f%", string0);
  }

  @Test
  @Timeout(4)
  void test03() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    Long long0 = (0L);
    checkoutForm0.setProvinceId(long0);
    Long long1 = checkoutForm0.getProvinceId();
    assertEquals(0L, (long) long1);
  }

  @Test
  @Timeout(4)
  void test04() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    Long long0 = (3012L);
    checkoutForm0.setProvinceId(long0);
    Long long1 = checkoutForm0.getProvinceId();
    assertEquals(3012L, (long) long1);
  }

  @Test
  @Timeout(4)
  void test05() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    Long long0 = ((-2560L));
    checkoutForm0.setProvinceId(long0);
    Long long1 = checkoutForm0.getProvinceId();
    assertEquals((-2560L), (long) long1);
  }

  @Test
  @Timeout(4)
  void test06() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    LinkedList<Long> linkedList0 = new LinkedList<Long>();
    checkoutForm0.products = (List<Long>) linkedList0;
    List<Long> list0 = checkoutForm0.getProducts();
    assertTrue(list0.isEmpty());
  }

  @Test
  @Timeout(4)
  void test07() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    Long long0 = (0L);
    LinkedList<Long> linkedList0 = new LinkedList<Long>();
    linkedList0.add(long0);
    checkoutForm0.setProducts(linkedList0);
    List<Long> list0 = checkoutForm0.getProducts();
    assertEquals(1, list0.size());
  }

  @Test
  @Timeout(4)
  void test08() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    checkoutForm0.setPostcode("eus.solaris.solaris.form.CheckoutForm");
    String string0 = checkoutForm0.getPostcode();
    assertEquals("eus.solaris.solaris.form.CheckoutForm", string0);
  }

  @Test
  @Timeout(4)
  void test09() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    checkoutForm0.setPostcode("");
    String string0 = checkoutForm0.getPostcode();
    assertEquals("", string0);
  }

  @Test
  @Timeout(4)
  void test10() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    Long long0 = (0L);
    checkoutForm0.setPaymentMethodId(long0);
    Long long1 = checkoutForm0.getPaymentMethodId();
    assertEquals(0L, (long) long1);
  }

  @Test
  @Timeout(4)
  void test11() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    Long long0 = (1L);
    checkoutForm0.setPaymentMethodId(long0);
    Long long1 = checkoutForm0.getPaymentMethodId();
    assertEquals(1L, (long) long1);
  }

  @Test
  @Timeout(4)
  void test12() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    Long long0 = ((-3684L));
    checkoutForm0.setPaymentMethodId(long0);
    Long long1 = checkoutForm0.getPaymentMethodId();
    assertEquals((-3684L), (long) long1);
  }

  @Test
  @Timeout(4)
  void test13() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    checkoutForm0.setNumber("eus.solaris.solaris.service.multithreading.conversions.ConversionToTempF");
    String string0 = checkoutForm0.getNumber();
    assertEquals("eus.solaris.solaris.service.multithreading.conversions.ConversionToTempF", string0);
  }

  @Test
  @Timeout(4)
  void test14() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    Long long0 = (0L);
    checkoutForm0.setExpirationYear(long0);
    Long long1 = checkoutForm0.getExpirationYear();
    assertEquals(0L, (long) long1);
  }

  @Test
  @Timeout(4)
  void test15() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    Long long0 = (3012L);
    checkoutForm0.setExpirationYear(long0);
    Long long1 = checkoutForm0.getExpirationYear();
    assertEquals(3012L, (long) long1);
  }

  @Test
  @Timeout(4)
  void test16() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    Long long0 = ((-3315L));
    checkoutForm0.setExpirationYear(long0);
    Long long1 = checkoutForm0.getExpirationYear();
    assertEquals((-3315L), (long) long1);
  }

  @Test
  @Timeout(4)
  void test17() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    Long long0 = (0L);
    checkoutForm0.setExpirationMonth(long0);
    Long long1 = checkoutForm0.getExpirationMonth();
    assertEquals(0L, (long) long1);
  }

  @Test
  @Timeout(4)
  void test18() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    Long long0 = (3012L);
    checkoutForm0.setExpirationMonth(long0);
    Long long1 = checkoutForm0.getExpirationMonth();
    assertEquals(3012L, (long) long1);
  }

  @Test
  @Timeout(4)
  void test19() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    Long long0 = ((-1L));
    checkoutForm0.setExpirationMonth(long0);
    Long long1 = checkoutForm0.getExpirationMonth();
    assertEquals((-1L), (long) long1);
  }

  @Test
  @Timeout(4)
  void test20() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    Long long0 = (0L);
    checkoutForm0.setCountryId(long0);
    Long long1 = checkoutForm0.getCountryId();
    assertEquals(0L, (long) long1);
  }

  @Test
  @Timeout(4)
  void test21() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    Long long0 = (1L);
    checkoutForm0.setCountryId(long0);
    Long long1 = checkoutForm0.getCountryId();
    assertEquals(1L, (long) long1);
  }

  @Test
  @Timeout(4)
  void test22() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    Long long0 = ((-1L));
    checkoutForm0.setCountryId(long0);
    Long long1 = checkoutForm0.getCountryId();
    assertEquals((-1L), (long) long1);
  }

  @Test
  @Timeout(4)
  void test23() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    checkoutForm0.setCity("$%t");
    String string0 = checkoutForm0.getCity();
    assertEquals("$%t", string0);
  }

  @Test
  @Timeout(4)
  void test24() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    checkoutForm0.setCity("");
    String string0 = checkoutForm0.getCity();
    assertEquals("", string0);
  }

  @Test
  @Timeout(4)
  void test25() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    checkoutForm0.setCardNumber("");
    String string0 = checkoutForm0.getCardNumber();
    assertEquals("", string0);
  }

  @Test
  @Timeout(4)
  void test26() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    checkoutForm0.setCardHolderName("IG'y6");
    String string0 = checkoutForm0.getCardHolderName();
    assertEquals("IG'y6", string0);
  }

  @Test
  @Timeout(4)
  void test27() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    Long long0 = (0L);
    checkoutForm0.setAddressId(long0);
    Long long1 = checkoutForm0.getAddressId();
    assertEquals(0L, (long) long1);
  }

  @Test
  @Timeout(4)
  void test28() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    Long long0 = (1171L);
    checkoutForm0.setAddressId(long0);
    Long long1 = checkoutForm0.getAddressId();
    assertEquals(1171L, (long) long1);
  }

  @Test
  @Timeout(4)
  void test29() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    Long long0 = ((-1717L));
    checkoutForm0.setAddressId(long0);
    Long long1 = checkoutForm0.getAddressId();
    assertEquals((-1717L), (long) long1);
  }

  @Test
  @Timeout(4)
  void test30() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    checkoutForm0.setCardNumber("JtC7.QZ{ Vr8  ");
    String string0 = checkoutForm0.getCardNumber();
    assertEquals("JtC7.QZ{ Vr8  ", string0);
  }

  @Test
  @Timeout(4)
  void test31() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    checkoutForm0.setSavePaymentMethod(true);
    boolean boolean0 = checkoutForm0.isSavePaymentMethod();
    assertTrue(boolean0);
  }

  @Test
  @Timeout(4)
  void test32() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    checkoutForm0.setCardHolderName("");
    String string0 = checkoutForm0.getCardHolderName();
    assertEquals("", string0);
  }

  @Test
  @Timeout(4)
  void test33() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    boolean boolean0 = checkoutForm0.isSavePaymentMethod();
    assertFalse(boolean0);
  }

  @Test
  @Timeout(4)
  void test34() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    String string0 = checkoutForm0.getNumber();
    assertNull(string0);
  }

  @Test
  @Timeout(4)
  void test35() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    Long long0 = checkoutForm0.getExpirationMonth();
    checkoutForm0.setExpirationMonth(long0);
    assertNull(checkoutForm0.getPostcode());
  }

  @Test
  @Timeout(4)
  void test36() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    Long long0 = checkoutForm0.getCountryId();
    assertNull(long0);
  }

  @Test
  @Timeout(4)
  void test37() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    Long long0 = checkoutForm0.getPaymentMethodId();
    assertNull(long0);
  }

  @Test
  @Timeout(4)
  void test38() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    Long long0 = checkoutForm0.getAddressId();
    assertNull(long0);
  }

  @Test
  @Timeout(4)
  void test39() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    String string0 = checkoutForm0.getPostcode();
    assertNull(string0);
  }

  @Test
  @Timeout(4)
  void test40() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    String string0 = checkoutForm0.getCity();
    assertNull(string0);
  }

  @Test
  @Timeout(4)
  void test41() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    Long long0 = checkoutForm0.getProvinceId();
    assertNull(long0);
  }

  @Test
  @Timeout(4)
  void test42() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    List<Long> list0 = checkoutForm0.getProducts();
    assertNull(list0);
  }

  @Test
  @Timeout(4)
  void test43() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    checkoutForm0.setNumber("");
    String string0 = checkoutForm0.getNumber();
    assertEquals("", string0);
  }

  @Test
  @Timeout(4)
  void test44() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    String string0 = checkoutForm0.getStreet();
    assertNull(string0);
  }

  @Test
  @Timeout(4)
  void test45() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    String string0 = checkoutForm0.getCardNumber();
    assertNull(string0);
  }

  @Test
  @Timeout(4)
  void test46() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    String string0 = checkoutForm0.getCardHolderName();
    assertNull(string0);
  }

  @Test
  @Timeout(4)
  void test47() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    Long long0 = checkoutForm0.getExpirationYear();
    assertNull(long0);
  }

  @Test
  @Timeout(4)
  void test48() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    String string0 = checkoutForm0.getSecurityCode();
    assertNull(string0);
  }

  @Test
  @Timeout(4)
  void test49() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    boolean boolean0 = checkoutForm0.isSaveAddress();
    assertFalse(boolean0);
  }

  @Test
  @Timeout(4)
  void test50() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    checkoutForm0.setSaveAddress(true);
    boolean boolean0 = checkoutForm0.isSaveAddress();
    assertTrue(boolean0);
  }

  @Test
  @Timeout(4)
  void test51() throws Throwable {
    CheckoutForm checkoutForm0 = new CheckoutForm();
    checkoutForm0.setSecurityCode("");
    String string0 = checkoutForm0.getSecurityCode();
    assertEquals("", string0);
  }
}
