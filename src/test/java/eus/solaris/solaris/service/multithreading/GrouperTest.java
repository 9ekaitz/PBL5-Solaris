/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 21 11:14:14 GMT 2022
 */

package eus.solaris.solaris.service.multithreading;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertThrows;
import static org.junit.Assert.assertTrue;

import java.time.Instant;
import java.time.LocalDate;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.NoSuchElementException;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import eus.solaris.solaris.service.multithreading.modes.GroupMode;

class GrouperTest {

  @Test
  @Timeout(4)
  void test0() throws Throwable {
    LinkedList<Double> linkedList0 = new LinkedList<Double>();
    Double double0 = 60.0;
    linkedList0.push(double0);
    Double double1 = Grouper.getKWhSumFromKWminList(linkedList0);
    assertEquals(1.0, (double) double1, 0.01);
  }

  @Test()
  @Timeout(4)
  void test1() throws Throwable {
    GroupMode groupMode0 = GroupMode.MONTH;
    Grouper grouper0 = new Grouper((GatherBuffer) null, (DataBuffer) null, groupMode0);
    assertThrows(NullPointerException.class, grouper0::run);

  }

  @Test
  @Timeout(4)
  void test2() throws Throwable {
    assertThrows(NullPointerException.class, () -> Grouper.groupByMonth((Map<Instant, Double>) null));
  }

  @Test
  @Timeout(4)
  void test3() throws Throwable {
    assertThrows(NullPointerException.class, () -> Grouper.getKWhSumFromKWminList((List<Double>) null));
  }

  @Test
  @Timeout(4)
  void test4() throws Throwable {
    Integer integer0 = -524;
    LocalDate localDate0 = LocalDate.ofEpochDay((-524));
    ThreadService threadService0 = new ThreadService(integer0, localDate0, localDate0);
    GatherBuffer gatherBuffer0 = new GatherBuffer(integer0, threadService0);
    HashMap<LocalDate, Map<Instant, Double>> hashMap0 = new HashMap<LocalDate, Map<Instant, Double>>();
    DataBuffer dataBuffer0 = new DataBuffer();
    gatherBuffer0.add(hashMap0);
    GroupMode groupMode0 = GroupMode.YEAR;
    Grouper grouper0 = new Grouper(gatherBuffer0, dataBuffer0, groupMode0);
    assertThrows(NoSuchElementException.class, grouper0::run);
  }

  @Test
  @Timeout(4)
  void test6() throws Throwable {
    HashMap<Instant, Double> hashMap0 = new HashMap<Instant, Double>();
    Map<Instant, Double> map0 = Grouper.groupByMonth(hashMap0);
    assertTrue(map0.isEmpty());
  }

  @Test
  @Timeout(4)
  void test7() throws Throwable {
    LinkedList<Double> linkedList0 = new LinkedList<Double>();
    Double double0 = -4281.2;
    linkedList0.add(double0);
    Double double1 = Grouper.getKWhSumFromKWminList(linkedList0);
    assertEquals((-71.35333333333332), (double) double1, 0.01);
  }

  @Test
  @Timeout(4)
  void test8() throws Throwable {
    LinkedList<Double> linkedList0 = new LinkedList<Double>();
    Double double0 = Grouper.getKWhSumFromKWminList(linkedList0);
    assertEquals(0.0, (double) double0, 0.01);
  }
}
