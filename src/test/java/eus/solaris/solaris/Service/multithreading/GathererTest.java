/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 21 11:10:50 GMT 2022
 */

package eus.solaris.solaris.service.multithreading;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertThrows;

import java.time.Instant;
import java.util.LinkedList;
import java.util.Map;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;

import eus.solaris.solaris.domain.SolarPanelDataEntry;

public class GathererTest {

  @Test
  @Timeout(4)
  public void test0() throws Throwable {
    LinkedList<SolarPanelDataEntry> linkedList0 = new LinkedList<SolarPanelDataEntry>();
    SolarPanelDataEntry solarPanelDataEntry0 = new SolarPanelDataEntry();
    Instant instant0 = Instant.ofEpochSecond((-1556L), 0L);
    solarPanelDataEntry0.setTimestamp(instant0);
    linkedList0.push(solarPanelDataEntry0);
    Map<Instant, Double> map0 = Gatherer.extractData(linkedList0);
    assertFalse(map0.isEmpty());
  }

  @Test
  @Timeout(4)
  public void test1() throws Throwable {
    LinkedList<SolarPanelDataEntry> linkedList0 = new LinkedList<SolarPanelDataEntry>();
    SolarPanelDataEntry solarPanelDataEntry0 = new SolarPanelDataEntry();
    linkedList0.push(solarPanelDataEntry0);
    assertThrows(NullPointerException.class, () -> Gatherer.extractData(linkedList0));
  }

  @Test
  @Timeout(4)
  public void test2() throws Throwable {
    LinkedList<SolarPanelDataEntry> linkedList0 = new LinkedList<SolarPanelDataEntry>();
    Map<Instant, Double> map0 = Gatherer.extractData(linkedList0);
    assertEquals(0, map0.size());
  }

  @Test
  @Timeout(4)
  public void test3() throws Throwable {
    assertThrows(NullPointerException.class, () -> new Gatherer((InitialBuffer) null, (GatherBuffer) null));
  }
}
